<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/06/15/hello-world/"/>
    <url>/2020/06/15/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="hljs"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">"My New Post"</span></code></pre></div><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="hljs"><pre><code class="hljs bash">$ hexo server</code></pre></div><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="hljs"><pre><code class="hljs bash">$ hexo generate</code></pre></div><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="hljs"><pre><code class="hljs bash">$ hexo deploy</code></pre></div><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>练习5-1 求m到n之和</title>
    <link href="/2019/10/29/%E7%BB%83%E4%B9%A05-1%20%E6%B1%82m%E5%88%B0n%E4%B9%8B%E5%92%8C/"/>
    <url>/2019/10/29/%E7%BB%83%E4%B9%A05-1%20%E6%B1%82m%E5%88%B0n%E4%B9%8B%E5%92%8C/</url>
    
    <content type="html"><![CDATA[<p>本题要求实现一个计算m~n（m&lt;n）之间所有整数的和的简单函数。<br>函数接口定义：</p><div class="hljs"><pre><code class="hljs excel"><span class="hljs-built_in">int</span> <span class="hljs-built_in">sum</span>( <span class="hljs-built_in">int</span> m, <span class="hljs-built_in">int</span> <span class="hljs-built_in">n</span> );</code></pre></div><p>其中m和n是用户传入的参数，保证有m&lt;n。函数返回的是m~n之间所有整数的和。</p><div class="hljs"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span><span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">sum</span><span class="hljs-params">(<span class="hljs-keyword">int</span> m,<span class="hljs-keyword">int</span> n)</span></span><span class="hljs-function"></span>&#123;<span class="hljs-keyword">int</span> sum=<span class="hljs-number">0</span>;<span class="hljs-keyword">while</span>(m&lt;=n)&#123;sum = sum +m;m=m+<span class="hljs-number">1</span>;&#125;<span class="hljs-keyword">return</span> sum;&#125;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><span class="hljs-function"></span>&#123;        <span class="hljs-keyword">int</span> m, n;    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d %d"</span>, &amp;m, &amp;n);    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"sum = %d\n"</span>, sum(m, n));    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>练习题</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PTA练习题 基础</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>练习5-3 数字金字塔</title>
    <link href="/2019/10/29/%E7%BB%83%E4%B9%A05-3%20%E6%95%B0%E5%AD%97%E9%87%91%E5%AD%97%E5%A1%94/"/>
    <url>/2019/10/29/%E7%BB%83%E4%B9%A05-3%20%E6%95%B0%E5%AD%97%E9%87%91%E5%AD%97%E5%A1%94/</url>
    
    <content type="html"><![CDATA[<p>本题要求实现函数输出n行数字金字塔。<br>函数接口定义：</p><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">pyramid</span><span class="hljs-params">( <span class="hljs-keyword">int</span> n )</span></span>;</code></pre></div><p>其中n是用户传入的参数，为[1, 9]的正整数。<br>要求函数按照如样例所示的格式打印出n行数字金字塔。<br>注意每个数字后面跟一个空格</p><div class="hljs"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">pyramid</span><span class="hljs-params">( <span class="hljs-keyword">int</span> n )</span> </span>&#123;<span class="hljs-keyword">int</span> a=<span class="hljs-number">1</span>;<span class="hljs-keyword">int</span> b=<span class="hljs-number">1</span>;<span class="hljs-keyword">int</span> c=n;<span class="hljs-keyword">for</span>(a=<span class="hljs-number">1</span>; a&lt;=n; a+=<span class="hljs-number">1</span>) &#123;<span class="hljs-keyword">for</span>(c=n; a&lt;c<span class="hljs-number">-1</span>; c-=<span class="hljs-number">1</span>) &#123;<span class="hljs-built_in">printf</span>(<span class="hljs-string">" "</span>);&#125;<span class="hljs-keyword">if</span>(a==n) &#123;<span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d "</span>,a);<span class="hljs-keyword">for</span>(b=<span class="hljs-number">1</span>; a&gt;b; b+=<span class="hljs-number">1</span>) &#123;<span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d"</span>,a);<span class="hljs-built_in">printf</span>(<span class="hljs-string">" "</span>);&#125;&#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-built_in">printf</span>(<span class="hljs-string">" %d"</span>,a);<span class="hljs-keyword">for</span>(b=<span class="hljs-number">1</span>; a&gt;b; b+=<span class="hljs-number">1</span>) &#123;<span class="hljs-built_in">printf</span>(<span class="hljs-string">" "</span>);<span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d"</span>,a);&#125;<span class="hljs-built_in">printf</span>(<span class="hljs-string">" "</span>);&#125;<span class="hljs-built_in">printf</span>(<span class="hljs-string">"\n"</span>);&#125;&#125;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><span class="hljs-function"></span>&#123;        <span class="hljs-keyword">int</span> n;    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d"</span>, &amp;n);    pyramid(n);    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;    system(<span class="hljs-string">"pause"</span>);&#125;</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>练习题</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PTA练习题 基础</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>练习5-2 找两个数中最大者</title>
    <link href="/2019/10/29/%E7%BB%83%E4%B9%A05-2%20%E6%89%BE%E4%B8%A4%E4%B8%AA%E6%95%B0%E4%B8%AD%E6%9C%80%E5%A4%A7%E8%80%85/"/>
    <url>/2019/10/29/%E7%BB%83%E4%B9%A05-2%20%E6%89%BE%E4%B8%A4%E4%B8%AA%E6%95%B0%E4%B8%AD%E6%9C%80%E5%A4%A7%E8%80%85/</url>
    
    <content type="html"><![CDATA[<p>本题要求对两个整数a和b，输出其中较大的数。<br>函数接口定义</p><div class="hljs"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">max</span><span class="hljs-params">( <span class="hljs-keyword">int</span> a, <span class="hljs-keyword">int</span> b )</span></span>;</code></pre></div><p>其中a和b是用户传入的参数，函数返回的是两者中较大的数</p><div class="hljs"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">max</span><span class="hljs-params">( <span class="hljs-keyword">int</span> a, <span class="hljs-keyword">int</span> b )</span></span><span class="hljs-function"></span>&#123;<span class="hljs-keyword">int</span> <span class="hljs-built_in">max</span>;<span class="hljs-keyword">if</span>(a&gt;b)&#123;<span class="hljs-built_in">max</span>=a;&#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-built_in">max</span>=b;&#125;<span class="hljs-keyword">return</span> <span class="hljs-built_in">max</span>;&#125;<span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><span class="hljs-function"></span>&#123;        <span class="hljs-keyword">int</span> a, b;    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%d %d"</span>, &amp;a, &amp;b);    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"max = %d\n"</span>, <span class="hljs-built_in">max</span>(a, b));    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;</code></pre></div>]]></content>
    
    
    <categories>
      
      <category>练习题</category>
      
    </categories>
    
    
    <tags>
      
      <tag>PTA练习题 基础</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
